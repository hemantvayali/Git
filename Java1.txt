package triangle;

class Triangle {
	//	the side lengths of the triangle
	private double a;
	private double b;
	private double c;
	
	// Default Constructor
	public Triangle(){
	}
	
	// Parameterized constructor to initialize the data members to passed values
	public Triangle (double a, double b, double c){
		this.a = a;
		this.b = b;
		this.c = c;
	}
	
	// parameter returns the circumference of the triangle
	public double parameter(){
		// Return the calculated parameter
		return a+b+c;
	}
	
	// area returns the area of the triangle
	public double area(){
		double s = (a + b + c) / 2;
		
		// Stores the calculated area
		double ar = Math.sqrt(s * (s-a) * (s-b) * (s-c));
		
		// Return the area
		return ar;
	}
}

// Driver Class
class TriangleDriver{
	public static void main(String[] args) {
		
		// Creating an array of Triangle instances and initializing them
		Triangle[] triangles = new Triangle[5];
		triangles[0] = new Triangle(3, 5, 5);
		triangles[1] = new Triangle(4, 5, 2);
		triangles[2] = new Triangle(5, 7, 9);
		triangles[3] = new Triangle(4, 3, 5);
		triangles[4] = new Triangle(2, 5, 4);
		
		// This instance will hold the returned instance from the maxTriangle method
		Triangle maxTri = new Triangle(); 
		maxTri = maxTriangle(triangles);
		
		// Print the parameter of the max Triangle
		System.out.println("The triangle that has the max parameter has the parameter:  " 
		+ maxTri.parameter());
	}
	
	// static maxTriangle returns that triangle that has greatest circumference
		public static Triangle maxTriangle(Triangle[] obj){
			int length = obj.length;
			
			// setting the first triangles parameter as max
			double maxPara = obj[0].parameter();
			int pos = 0;
			
			// Comparing each triangle's parameter with the max parameter 
			for(int i = 0; i < length; i++){
				if(obj[i].parameter() > maxPara){
					maxPara = obj[i].parameter();
					pos = i;
				}
			}
			return obj[pos];
		}
}
